{"version":3,"sources":["assets/create-white-36dp.svg","assets/remove-white-36dp.svg","components/Node.js","components/Edge.js","components/Arrow.js","components/Graph.js","components/NodeCard.js","App.js","serviceWorker.js","assets/theme.js","index.js"],"names":["module","exports","Node","divProps","this","props","transform","name","key","style","x","y","className","backgroundColor","color","React","Component","diagonal","Math","sqrt","Edge","edgeStyle","opacity","arrowStyle","rotate","scale","Fragment","children","Arrow","Graph","drawNodes","bind","drawEdges","setNode","state","node_name","data","nodes","node","targets","setState","activeNode","nodes_components","hasOwnProperty","push","onMouseEnter","position","i","j","firstLines","edges_components","arrow_components","edges","edge_index","edge","path","origin","last_point","point_index","length","point","lineProperties","lineKey","splice","line","nextProps","nextState","nextContext","height","width","NodeCard","makeChips","chips","child","Chip","label","onClick","onEdit","src","edit","alt","onRemove","remove","App","A","B","C","D","E","F","G","addChild","addNode","createNodeCards","removeChild","removeNode","editNode","compileGraph","clean","Object","keys","request","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","fetch","then","response","json","error","graph","includes","cards","e","index","indexOf","nodeChildren","TextField","id","value","onChange","target","helperText","onKeyPress","map","onDelete","Button","variant","disabled","Boolean","window","location","hostname","match","createMuiTheme","palette","primary","main","secondary","ReactDOM","render","StrictMode","ThemeProvider","theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"yHAAAA,EAAOC,QAAU,IAA0B,+C,mBCA3CD,EAAOC,QAAU,IAA0B,+C,0TC2B5BC,G,6KAvBP,IAAMC,EAAQ,eAAOC,KAAKC,cACnBF,EAASG,iBACTH,EAASI,YACTJ,EAASK,IAChB,IAAIC,EAAQ,GACZ,GAAGL,KAAKC,MAAMC,UAAW,CACrB,IAAMA,EAAYF,KAAKC,MAAMC,UACvBI,EAAIJ,EAAUI,EAAIJ,EAAUI,EAAI,EAChCC,EAAIL,EAAUK,EAAIL,EAAUK,EAAI,EACtCF,EAAMH,UAAN,oBAA+BI,EAA/B,cAAsCC,EAAtC,OAEJ,OACI,yBAAKC,UAAU,OAAOH,MAAOA,GACzB,uCAAKG,UAAU,aAAgBT,EAA/B,CAAyCM,MAAO,CAACI,gBAAgBT,KAAKC,MAAMS,MAAQV,KAAKC,MAAMS,MAAQ,WACnG,2BACKV,KAAKC,MAAME,Y,GAjBjBQ,IAAMC,YCEnBC,G,MAAWC,KAAKC,KAAK,IA4BZC,E,uKAxBP,IAAMC,EAAY,CAACC,QAASlB,KAAKC,MAAMiB,QAAUlB,KAAKC,MAAMiB,QAAU,GAChEC,EAAa,GACnB,GAAInB,KAAKC,MAAMC,UAAW,CACtB,IAAMA,EAAYF,KAAKC,MAAMC,UACvBI,EAAIJ,EAAUI,EAAIJ,EAAUI,EAAI,EAChCC,EAAIL,EAAUK,EAAIL,EAAUK,EAAI,EAChCa,EAASpB,KAAKC,MAAMC,UAAUkB,OAC9BC,EAAQD,EAAS,IAAM,EAAIP,EAAW,EAC5CI,EAAUf,UAAV,oBAAmCI,EAb9B,GAaL,cAAqDC,EAbhD,GAaL,sBAAwF,GAATa,EAA/E,uBAAyGC,EAAzG,KACAF,EAAWjB,UAAX,oBAAoCI,EAd/B,GAc8C,GAAnD,cAA2DC,EAdtD,GAcqE,GAA1E,sBAAmG,GAATa,EAA1F,0BAAuHA,EAAS,EAAI,GAAK,EAAzI,WAEJ,OACI,kBAAC,IAAME,SAAP,KACI,wBAAId,UAAU,OAAOH,MAAOY,IAC3BjB,KAAKC,MAAMsB,UACZ,yBAAKf,UAAU,kBAAkBH,MAAOc,GACnCnB,KAAKC,MAAMsB,e,GAlBbZ,IAAMC,WCIVY,E,uKANP,OACI,yBAAKhB,UAAU,c,GAHPI,aCiHLa,E,kDA5GX,WAAYxB,GAAQ,IAAD,8BACf,cAAMA,IACDyB,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBACjB,EAAKE,QAAU,EAAKA,QAAQF,KAAb,gBACf,EAAKG,MAAQ,GALE,E,oDAQXC,GACJ,GAAI/B,KAAKC,MAAM+B,MAAQhC,KAAKC,MAAM+B,KAAKC,MAAO,CAC1C,IAAMC,EAAOlC,KAAKC,MAAM+B,KAAKC,MAAMF,GACnC,GAAIG,EAAM,CACN,IADM,EACAC,EAAU,GADV,cAEaD,EAAKX,UAFlB,IAEN,4BACIY,EADJ,UACsB,GAHhB,8BAINnC,KAAKoC,SAAS,CAACC,WAAYN,EAAWI,gB,kCAKrC,IAAD,OACJG,EAAmB,GACvB,GAAItC,KAAKC,MAAM+B,MAAQhC,KAAKC,MAAM+B,KAAKC,MAAO,CAC1C,IAAMA,EAAQjC,KAAKC,MAAM+B,KAAKC,MADY,WAEjCF,GACL,GAAIE,EAAMM,eAAeR,GAAY,CACjC,IAAMG,EAAOD,EAAMF,GACfrB,EAAQ,QACR,EAAKoB,MAAMO,aAAeN,EAC1BrB,EAAQ,oBACH,EAAKoB,MAAMK,SAAW,EAAKL,MAAMK,QAAQJ,KAC9CrB,EAAQ,mBACZ4B,EAAiBE,KAAK,kBAAC,EAAD,CAAMpC,IAAK2B,EACLrB,MAAOA,EACPP,KAAM4B,EACNU,aAAc,kBAAM,EAAKZ,QAAQE,IACjC7B,UAAW,CAACI,EAAqB,GAAlB4B,EAAKQ,SAASC,EAAQpC,EAAqB,GAAlB2B,EAAKQ,SAASE,QAZ1F,IAAK,IAAIb,KAAaE,EAAtB,EAASF,GAeb,OAAOO,I,kCAIP,IAAMO,EAAa,GACbC,EAAmB,GACnBC,EAAmB,GACzB,GAAI/C,KAAKC,MAAM+B,MAAQhC,KAAKC,MAAM+B,KAAKgB,MAAO,CAC1C,IAAMA,EAAQhD,KAAKC,MAAM+B,KAAKgB,MAC9B,GAAIA,EACA,IAAK,IAAIC,KAAcD,EACnB,GAAIA,EAAMT,eAAeU,IAAeD,EAAMC,GAAa,CACvD,IAAMC,EAAOF,EAAMC,GAAYE,KAEzBjC,EADS8B,EAAMC,GAAYG,SACNpD,KAAK8B,MAAMO,WAAa,EAAM,GACrDgB,OAAU,EACd,GAAIH,EACA,IAAK,IAAII,EAAc,EAAGA,EAAcJ,EAAKK,OAAQD,IAAe,CAChE,IAAME,EAAQN,EAAKI,GACnB,GAAoB,IAAhBA,EAAmB,CACnB,IAAMhD,EAAmB,GAAf+C,EAAWV,EACfpC,EAAmB,GAAf8C,EAAWT,EACfxB,GAAUoC,EAAMZ,EAAIS,EAAWT,IAAMS,EAAWV,IAAMa,EAAMb,EAAI,EAAI,GACpEc,EAAiB,CAACnD,IAAGC,IAAGa,SAAQF,WAChCwC,EAAO,UAAMpD,GAAN,OAAUC,GAAV,OAAca,GACxBkC,IAAgBJ,EAAKK,OAAS,IAC7BR,EAAiBW,IAAW,GAC3Bb,EAAWa,KACZb,EAAWa,GAAW,IACV,IAAZxC,EACA2B,EAAWa,GAASC,OAAO,EAAG,EAAGF,GAEjCZ,EAAWa,GAASlB,KAAKiB,GAEjCJ,EAAaG,IAIrC,IAAK,IAAIE,KAAWb,EAChB,GAAIA,EAAWN,eAAemB,GAAU,CACpC,IAAME,EAAOf,EAAWa,GAAS,GACjCZ,EAAiBN,KACb,kBAAC,EAAD,CAAMpC,IAAKsD,EACLxD,UAAW,CAACI,EAAGsD,EAAKtD,EAAGC,EAAGqD,EAAKrD,EAAGa,OAAQwC,EAAKxC,QAASF,QAAS0C,EAAK1C,SACvE0C,EAAK1C,SAAW,GAAO6B,EAAiBW,IAAY,kBAAC,EAAD,QAKrE,OAAOZ,I,4CAGWe,EAAWC,EAAWC,GACxC,OAAO/D,KAAKC,MAAM+B,OAAS6B,EAAU7B,MAAQhC,KAAK8B,MAAMO,aAAeyB,EAAUzB,a,+BAIjF,OACI,yBAAK7B,UAAU,QAAQH,MAAOL,KAAKC,MAAM+B,MAAQ,CAC7CgC,OAAiC,GAAzBhE,KAAKC,MAAM+B,KAAKgC,OACxBC,MAA+B,GAAxBjE,KAAKC,MAAM+B,KAAKiC,QAEtBjE,KAAK4B,YACL5B,KAAK0B,iB,GAvGFf,IAAMC,W,qEC6CXsD,E,kDA3CX,WAAYjE,GAAQ,IAAD,8BACf,cAAMA,IACDkE,UAAY,EAAKA,UAAUxC,KAAf,gBAFF,E,wDAMf,IAAMyC,EAAQ,GACd,GAAIpE,KAAKC,MAAMsB,SAAf,qBACsBvB,KAAKC,MAAMsB,UADjC,IACI,gCAAS8C,EAAT,QACID,EAAM5B,KAAK,kBAAC8B,EAAA,EAAD,CAAM5D,MAAM,YAAYN,IAAKiE,EAAOE,MAAOF,MAF9D,+BAGA,OAAOD,I,+BAIP,OACI,yBAAK5D,UAAU,aACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,cAAcH,MAAO,CAACI,gBAAiB,qBAAuB+D,QAASxE,KAAKC,MAAMwE,QAC7F,yBAAKC,IAAKC,IAAMC,IAAK,gBAG7B,yBAAKpE,UAAU,QACX,yBAAKA,UAAU,YAAYH,MAAO,CAACI,gBAAiB,sBAChD,2BACKT,KAAKC,MAAME,QAIxB,yBAAKK,UAAU,oBACX,yBAAKA,UAAU,cAAcH,MAAO,CAACI,gBAAiB,mBAAoB+D,QAASxE,KAAKC,MAAM4E,UAC1F,yBAAKH,IAAKI,IAAQF,IAAK,mBAInC,yBAAKpE,UAAU,gBACVR,KAAKmE,kB,GArCHxD,IAAMC,WCsKdmE,E,kDApKX,WAAY9E,GAAQ,IAAD,8BACf,cAAMA,IACD6B,MAAQ,CACTP,SAAU,GACVQ,UAAW,GACXsC,MAAO,GACPpC,MAAO,CACH+C,EAAG,CAAC,IAAK,KACTC,EAAG,CAAC,IAAK,KACTC,EAAG,CAAC,IAAK,KACTC,EAAG,CAAC,KACJC,EAAG,CAAC,IAAK,KACTC,EAAG,CAAC,KACJC,EAAG,KAGX,EAAKC,SAAW,EAAKA,SAAS5D,KAAd,gBAChB,EAAK6D,QAAU,EAAKA,QAAQ7D,KAAb,gBACf,EAAK8D,gBAAkB,EAAKA,gBAAgB9D,KAArB,gBACvB,EAAK+D,YAAc,EAAKA,YAAY/D,KAAjB,gBACnB,EAAKgE,WAAa,EAAKA,WAAWhE,KAAhB,gBAClB,EAAKiE,SAAW,EAAKA,SAASjE,KAAd,gBAChB,EAAKkE,aAAe,EAAKA,aAAalE,KAAlB,gBACpB,EAAKmE,MAAQ,EAAKA,MAAMnE,KAAX,gBAvBE,E,oDA2Bf3B,KAAKoC,SAAS,CACVb,SAAU,GACVQ,UAAW,GACXsC,MAAO,GACPpC,MAAO,O,qCAIC,IAAD,OACLA,EAAQjC,KAAK8B,MAAMG,MACzB,GAAI8D,OAAOC,KAAK/D,GAAOsB,OAAS,EAAG,CAC/B,IAAM0C,EAAU,CACZC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAU,CAAC1E,WAE1B2E,MAAM,eAAgBX,GACjBY,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACGA,EAASE,OACV,EAAK5E,SAAS,CAAC6E,MAAOH,U,gCAOtC,GAA6B,KAAzB9G,KAAK8B,MAAMC,UAAkB,CAC7B,IAAMR,EAAWvB,KAAK8B,MAAMP,SACtB8C,EAAQrE,KAAK8B,MAAMuC,MACX,KAAVA,GAAiB9C,EAAS2F,SAAS7C,IACnC9C,EAASiB,KAAK6B,GAElB,IAAMpC,EAAQjC,KAAK8B,MAAMG,MACzBA,EAAMjC,KAAK8B,MAAMC,WAAjB,YAAkCR,GAClCvB,KAAKoC,SAAS,CAACb,SAAU,GAAIQ,UAAW,GAAIsC,MAAO,GAAIpC,a,wCAI5C,IAAD,OACRkF,EAAQ,GACRlF,EAAQjC,KAAK8B,MAAMG,MAFX,WAGLF,GACDE,EAAMM,eAAeR,IACrBoF,EAAM3E,KAAK,kBAAC,EAAD,CAAUpC,IAAK2B,EAAW5B,KAAM4B,EAAWR,SAAUU,EAAMF,GACjD8C,SAAU,kBAAM,EAAKc,WAAW5D,IAChC0C,OAAQ,kBAAM,EAAKmB,SAAS7D,QAJzD,IAAK,IAAIA,KAAaE,EAAtB,EAASF,GAKT,OAAOoF,I,+BAGFC,GACL,GAAc,UAAVA,EAAEhH,IAAN,CAEA,IAAMmB,EAAWvB,KAAK8B,MAAMP,SACtB8C,EAAQrE,KAAK8B,MAAMuC,MACX,KAAVA,GAAiB9C,EAAS2F,SAAS7C,KACnC9C,EAASiB,KAAK6B,GACdrE,KAAKoC,SAAS,CAACb,WAAU8C,MAAO,S,kCAI5BtC,GACR,IAAMR,EAAWvB,KAAK8B,MAAMP,SACtB8F,EAAQ9F,EAAS+F,QAAQvF,GAC3BsF,GAAS,IACT9F,EAASoC,OAAO0D,EAAO,GACvBrH,KAAKoC,SAAS,CAACb,gB,iCAIZQ,GACP,IAAME,EAAQjC,KAAK8B,MAAMG,MACrBA,EAAMF,YACCE,EAAMF,GACb/B,KAAKoC,SAAS,CAACH,a,+BAIdF,GACL,IAAME,EAAQjC,KAAK8B,MAAMG,MACzB,GAAIA,EAAMF,GAAY,CAClB,IAAMwF,EAAetF,EAAMF,UACpBE,EAAMF,GACb/B,KAAKoC,SAAS,CAACH,QAAOV,SAAUgG,EAAcxF,UAAWA,O,0CAK7D/B,KAAK6F,iB,+BAGC,IAAD,OACL,OACI,yBAAKrF,UAAU,OACX,6CACA,yBAAKA,UAAU,WACX,yBAAKA,UAAU,QACX,kBAACgH,EAAA,EAAD,CAAWC,GAAG,YAAYpH,MAAO,CAAC4D,MAAO,KAAMM,MAAM,YAAYmD,MAAO1H,KAAK8B,MAAMC,UACxE4F,SAAU,SAAAP,GAAC,OAAI,EAAKhF,SAAS,CAACL,UAAWqF,EAAEQ,OAAOF,WAC7D,kBAACF,EAAA,EAAD,CAAWC,GAAG,QAAQpH,MAAO,CAAC4D,MAAO,KAAMM,MAAM,YAAYmD,MAAO1H,KAAK8B,MAAMuC,MACpEwD,WAAY,qBACZF,SAAU,SAAAP,GAAC,OAAI,EAAKhF,SAAS,CAACiC,MAAO+C,EAAEQ,OAAOF,SAASI,WAAY9H,KAAKuF,YAEvF,yBAAKlF,MAAO,CAAC4D,MAAO,MACpB,6BACI,wCACA,yBAAKzD,UAAU,kBACVR,KAAK8B,MAAMP,SAASwG,KAAI,SAAAhG,GAAS,OAAI,kBAACuC,EAAA,EAAD,CAAMlE,IAAK2B,EACLiG,SAAU,kBAAM,EAAKtC,YAAY3D,IACjCwC,MAAOxC,UAI/D,yBAAKvB,UAAU,kBACX,kBAACyH,EAAA,EAAD,CAAQC,QAAQ,YAAYxH,MAAM,YAAY8D,QAASxE,KAAKwF,SAA5D,YACA,kBAACyC,EAAA,EAAD,CAAQC,QAAQ,YAAYxH,MAAM,YAAY8D,QAASxE,KAAK8F,OAA5D,SACA,kBAACmC,EAAA,EAAD,CAAQC,QAAQ,YAAYxH,MAAM,YAAYyH,SAAUpC,OAAOC,KAAKhG,KAAK8B,MAAMG,OAAOsB,OAAS,EACvFiB,QAASxE,KAAK6F,cADtB,YAGJ,yBAAKrF,UAAU,cACVR,KAAKyF,mBAEV,yBAAKjF,UAAU,eACX,kBAAC,EAAD,CAAOwB,KAAMhC,KAAK8B,MAAMmF,c,GA9J1BtG,IAAMC,WCIJwH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCLSC,cAXD,CACVC,QAAS,CACLC,QAAS,CACLC,KAAM,qBAEVC,UAAW,CACPD,KAAM,sBCAlBE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACI,kBAACC,EAAA,EAAD,CAAeC,MAAOA,GAClB,kBAAC,EAAD,QAGRC,SAASC,eAAe,SFqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1C,MAAK,SAAA2C,GACJA,EAAaC,gBAEdC,OAAM,SAAA1C,GACL2C,QAAQ3C,MAAMA,EAAM4C,c","file":"static/js/main.4e3715a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/create-white-36dp.5014967b.svg\";","module.exports = __webpack_public_path__ + \"static/media/remove-white-36dp.9574eed3.svg\";","import React from 'react';\nimport \"../assets/Node.scss\";\nclass Node extends React.Component {\n    render() {\n        const divProps = {...this.props}\n        delete divProps.transform;\n        delete divProps.name;\n        delete divProps.key;\n        let style = {}\n        if(this.props.transform) {\n            const transform = this.props.transform;\n            const x = transform.x ? transform.x : 0;\n            const y = transform.y ? transform.y : 0;\n            style.transform = `translate(${x}px,${y}px)`\n        }\n        return (\n            <div className=\"node\" style={style}>\n                <div className=\"node-item\" {...divProps} style={{backgroundColor:this.props.color ? this.props.color : \"white\"}}>\n                    <p>\n                        {this.props.name}\n                    </p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Node;","import React from 'react';\nimport \"../assets/Edge.scss\";\n\nconst halfSide = 20;\nconst diagonal = Math.sqrt(2);\n\nclass Edge extends React.Component {\n    render() {\n        const edgeStyle = {opacity: this.props.opacity ? this.props.opacity : 1};\n        const arrowStyle = {};\n        if (this.props.transform) {\n            const transform = this.props.transform;\n            const x = transform.x ? transform.x : 0;\n            const y = transform.y ? transform.y : 0;\n            const rotate = this.props.transform.rotate;\n            const scale = rotate % 2 !== 0 ? diagonal : 1;\n            edgeStyle.transform = `translate(${x + halfSide}px,${y + halfSide}px) rotate(${rotate * 45}deg) scaleX(${scale})`;\n            arrowStyle.transform = `translate(${x + halfSide - 15}px,${y + halfSide - 15}px) rotate(${rotate * 45}deg) translate(${rotate % 2 ? 25 : 8}px,0px)`;\n        }\n        return (\n            <React.Fragment>\n                <hr className=\"edge\" style={edgeStyle}/>\n                {this.props.children &&\n                <div className=\"arrow-container\" style={arrowStyle}>\n                    {this.props.children}\n                </div>\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Edge;","import React, {Component} from \"react\";\n\nclass Arrow extends Component {\n    render() {\n        return (\n            <div className=\"arrow\"/>\n        );\n    }\n}\n\nexport default Arrow;","import React from 'react';\nimport \"../assets/Graph.scss\";\nimport Node from \"./Node\";\nimport Edge from \"./Edge\";\nimport Arrow from \"./Arrow\";\n\nclass Graph extends React.Component {\n    constructor(props) {\n        super(props);\n        this.drawNodes = this.drawNodes.bind(this);\n        this.drawEdges = this.drawEdges.bind(this);\n        this.setNode = this.setNode.bind(this);\n        this.state = {};\n    }\n\n    setNode(node_name) {\n        if (this.props.data && this.props.data.nodes) {\n            const node = this.props.data.nodes[node_name]\n            if (node) {\n                const targets = {}\n                for (let target of node.children)\n                    targets[target] = true;\n                this.setState({activeNode: node_name, targets})\n            }\n        }\n    }\n\n    drawNodes() {\n        let nodes_components = [];\n        if (this.props.data && this.props.data.nodes) {\n            const nodes = this.props.data.nodes;\n            for (let node_name in nodes)\n                if (nodes.hasOwnProperty(node_name)) {\n                    const node = nodes[node_name];\n                    let color = \"white\";\n                    if (this.state.activeNode === node_name)\n                        color = \"rgb(97, 205, 187)\";\n                    else if (this.state.targets && this.state.targets[node_name])\n                        color = \"rgb(244,117,96)\";\n                    nodes_components.push(<Node key={node_name}\n                                                color={color}\n                                                name={node_name}\n                                                onMouseEnter={() => this.setNode(node_name)}\n                                                transform={{x: node.position.i * 40, y: node.position.j * 40}}/>)\n                }\n        }\n        return nodes_components;\n    }\n\n    drawEdges() {\n        const firstLines = {};\n        const edges_components = [];\n        const arrow_components = {};\n        if (this.props.data && this.props.data.edges) {\n            const edges = this.props.data.edges;\n            if (edges)\n                for (let edge_index in edges)\n                    if (edges.hasOwnProperty(edge_index) && edges[edge_index]) {\n                        const edge = edges[edge_index].path;\n                        const origin = edges[edge_index].origin;\n                        const opacity = origin === this.state.activeNode ? 1.0 : 0.5;\n                        let last_point;\n                        if (edge)\n                            for (let point_index = 0; point_index < edge.length; point_index++) {\n                                const point = edge[point_index];\n                                if (point_index !== 0) {\n                                    const x = last_point.i * 40;\n                                    const y = last_point.j * 40;\n                                    const rotate = (point.j - last_point.j) * (last_point.i === point.i ? 2 : 1);\n                                    const lineProperties = {x, y, rotate, opacity};\n                                    const lineKey = `${x}${y}${rotate}`;\n                                    if(point_index === edge.length - 1)\n                                        arrow_components[lineKey] = true;\n                                    if (!firstLines[lineKey])\n                                        firstLines[lineKey] = [];\n                                    if (opacity === 1)\n                                        firstLines[lineKey].splice(0, 0, lineProperties)\n                                    else\n                                        firstLines[lineKey].push(lineProperties)\n                                }\n                                last_point = point;\n                            }\n                    }\n        }\n        for (let lineKey in firstLines) {\n            if (firstLines.hasOwnProperty(lineKey)) {\n                const line = firstLines[lineKey][0];\n                edges_components.push(\n                    <Edge key={lineKey}\n                          transform={{x: line.x, y: line.y, rotate: line.rotate}} opacity={line.opacity}>\n                        {line.opacity >= 1.0 && arrow_components[lineKey] && <Arrow/>}\n                    </Edge>\n                );\n            }\n        }\n        return edges_components;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return this.props.data !== nextProps.data || this.state.activeNode !== nextState.activeNode;\n    }\n\n    render() {\n        return (\n            <div className=\"graph\" style={this.props.data && {\n                height: this.props.data.height * 40,\n                width: this.props.data.width * 40,\n            }}>\n                {this.drawEdges()}\n                {this.drawNodes()}\n            </div>\n        );\n    }\n}\n\nexport default Graph;","import React from 'react';\nimport Chip from \"@material-ui/core/Chip\";\nimport \"../assets/NodeCard.scss\";\nimport \"../assets/Node.scss\";\nimport edit from \"../assets/create-white-36dp.svg\";\nimport remove from \"../assets/remove-white-36dp.svg\";\n\nclass NodeCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.makeChips = this.makeChips.bind(this);\n    }\n\n    makeChips() {\n        const chips = [];\n        if (this.props.children)\n            for (let child of this.props.children)\n                chips.push(<Chip color=\"secondary\" key={child} label={child}/>)\n        return chips;\n    }\n\n    render() {\n        return (\n            <div className=\"node-card\">\n                <div className=\"card-header\">\n                    <div className=\"button-container\">\n                        <div className=\"button-item\" style={{backgroundColor: \"rgb(97, 205, 187)\"}}  onClick={this.props.onEdit}>\n                            <img src={edit} alt={\"edit-node\"}/>\n                        </div>\n                    </div>\n                    <div className=\"node\">\n                        <div className=\"node-item\" style={{backgroundColor: \"rgb(97, 205, 187)\"}}>\n                            <p>\n                                {this.props.name}\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"button-container\">\n                        <div className=\"button-item\" style={{backgroundColor: \"rgb(244,117,96)\"}} onClick={this.props.onRemove}>\n                            <img src={remove} alt={\"remove-node\"}/>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"card-content\">\n                    {this.makeChips()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default NodeCard;","import React from 'react';\nimport './assets/App.css';\nimport Graph from \"./components/Graph\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Button from \"@material-ui/core/Button\";\nimport NodeCard from \"./components/NodeCard\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            children: [],\n            node_name: \"\",\n            child: \"\",\n            nodes: {\n                A: [\"B\", \"C\"],\n                B: [\"D\", \"E\"],\n                C: [\"D\", \"E\"],\n                D: [\"F\"],\n                E: [\"F\", \"G\"],\n                F: [\"G\"],\n                G: []\n            }\n        };\n        this.addChild = this.addChild.bind(this);\n        this.addNode = this.addNode.bind(this);\n        this.createNodeCards = this.createNodeCards.bind(this);\n        this.removeChild = this.removeChild.bind(this);\n        this.removeNode = this.removeNode.bind(this);\n        this.editNode = this.editNode.bind(this);\n        this.compileGraph = this.compileGraph.bind(this);\n        this.clean = this.clean.bind(this);\n    }\n\n    clean() {\n        this.setState({\n            children: [],\n            node_name: \"\",\n            child: \"\",\n            nodes: {}\n        });\n    }\n\n    compileGraph() {\n        const nodes = this.state.nodes;\n        if (Object.keys(nodes).length > 0) {\n            const request = {\n                method: 'POST',\n                mode: 'cors',\n                cache: 'no-cache',\n                credentials: 'same-origin',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                redirect: 'follow',\n                referrerPolicy: 'no-referrer',\n                body: JSON.stringify({nodes})\n            };\n            fetch(\"/api/compile\", request)\n                .then(response => response.json())\n                .then(response => {\n                    if (!response.error) {\n                        this.setState({graph: response});\n                    }\n                });\n        }\n    }\n\n    addNode() {\n        if (this.state.node_name !== \"\") {\n            const children = this.state.children;\n            const child = this.state.child;\n            if (child !== \"\" && !children.includes(child)) {\n                children.push(child);\n            }\n            const nodes = this.state.nodes;\n            nodes[this.state.node_name] = [...children];\n            this.setState({children: [], node_name: \"\", child: \"\", nodes});\n        }\n    }\n\n    createNodeCards() {\n        const cards = []\n        const nodes = this.state.nodes;\n        for (let node_name in nodes)\n            if (nodes.hasOwnProperty(node_name))\n                cards.push(<NodeCard key={node_name} name={node_name} children={nodes[node_name]}\n                                     onRemove={() => this.removeNode(node_name)}\n                                     onEdit={() => this.editNode(node_name)}/>)\n        return cards;\n    }\n\n    addChild(e) {\n        if (e.key !== \"Enter\")\n            return;\n        const children = this.state.children;\n        const child = this.state.child;\n        if (child !== \"\" && !children.includes(child)) {\n            children.push(child);\n            this.setState({children, child: \"\"})\n        }\n    }\n\n    removeChild(node_name) {\n        const children = this.state.children;\n        const index = children.indexOf(node_name);\n        if (index > -1) {\n            children.splice(index, 1);\n            this.setState({children})\n        }\n    }\n\n    removeNode(node_name) {\n        const nodes = this.state.nodes;\n        if (nodes[node_name]) {\n            delete nodes[node_name];\n            this.setState({nodes})\n        }\n    }\n\n    editNode(node_name) {\n        const nodes = this.state.nodes;\n        if (nodes[node_name]) {\n            const nodeChildren = nodes[node_name];\n            delete nodes[node_name];\n            this.setState({nodes, children: nodeChildren, node_name: node_name})\n        }\n    }\n\n    componentDidMount() {\n        this.compileGraph();\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <h2>Graph Display</h2>\n                <div className=\"actions\">\n                    <div className=\"form\">\n                        <TextField id=\"node_name\" style={{width: 110}} label=\"Node Name\" value={this.state.node_name}\n                                   onChange={e => this.setState({node_name: e.target.value})}/>\n                        <TextField id=\"child\" style={{width: 110}} label=\"Add Child\" value={this.state.child}\n                                   helperText={\"Press enter to add\"}\n                                   onChange={e => this.setState({child: e.target.value})} onKeyPress={this.addChild}/>\n                    </div>\n                    <div style={{width: 40}}/>\n                    <div>\n                        <h3>Children</h3>\n                        <div className=\"children-panel\">\n                            {this.state.children.map(node_name => <Chip key={node_name}\n                                                                        onDelete={() => this.removeChild(node_name)}\n                                                                        label={node_name}/>)}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"action-buttons\">\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.addNode}>Add Node</Button>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.clean}>Clean</Button>\n                    <Button variant=\"contained\" color=\"secondary\" disabled={Object.keys(this.state.nodes).length < 1}\n                            onClick={this.compileGraph}>Compile</Button>\n                </div>\n                <div className=\"node-cards\">\n                    {this.createNodeCards()}\n                </div>\n                <div className=\"App-content\">\n                    <Graph data={this.state.graph}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme} from '@material-ui/core/styles';\n\nconst theme = {\n    palette: {\n        primary: {\n            main: \"rgb(97, 205, 187)\",\n        },\n        secondary: {\n            main: \"rgb(244,117,96)\",\n        },\n    },\n};\n\nexport default createMuiTheme(theme);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/index.css';\nimport {ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport theme from \"./assets/theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <ThemeProvider theme={theme}>\n          <App />\n      </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}